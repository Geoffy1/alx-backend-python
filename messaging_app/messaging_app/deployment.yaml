apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-app-deployment
  labels:
    app: messaging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: messaging-app
  template:
    metadata:
      labels:
        app: messaging-app
    spec:
      containers:
      - name: messaging-app-container
        # Use your Docker image here.
        image: your-username/messaging-app:1.0
        ports:
        - containerPort: 8000
        # Recommended: Define resource requests and limits to ensure efficient scheduling.
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        # Best Practice: Add liveness and readiness probes for health checks.
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: messaging-app-service
spec:
  type: ClusterIP
  selector:
    app: messaging-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
